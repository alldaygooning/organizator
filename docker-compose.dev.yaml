services:
    lobby_boy:
        image: organizator/lobby_boy:dev
        container_name: lobby_boy_dev
        build:
            context: ./lobby_boy
            dockerfile: Dockerfile.dev
        volumes:
            - ${LOBBY_BOY_DIR}/src:/lobby_boy/src:cached
        environment:
            - JWT_SECRET=${JWT_SECRET}
            - API_KEY=${LOBBY_BOY_API_KEY}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_PORT=${POSTGRES_PORT}
        hostname: lobby-boy
        ports:
            - "${LOBBY_BOY_PORT}:8080"
            - "${LOBBY_BOY_DEBUG}:5005"
        command: ["bash"]
        stdin_open: true 
        tty: true
        depends_on:
            - postgres
    organaut:
        image: organizator/organaut:dev
        container_name: organaut_dev
        build:
            context: ./organaut
            dockerfile: Dockerfile.dev
        volumes:
            - ${ORGANAUT_DIR}/src:/organaut/src:cached
        environment:
            - LOBBY_BOY_API_KEY=${LOBBY_BOY_API_KEY}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_PORT=${POSTGRES_PORT}
        ports:
            - "${ORGANAUT_PORT}:8080"
            - "${ORGANAUT_DEBUG}:5005"
        command: ["bash"]
        stdin_open: true 
        tty: true
        depends_on:
            - postgres
    nginx:
        image: organizator/nginx:dev
        container_name: nginx_organizator_dev
        build:
            context: ./nginx
            dockerfile: Dockerfile.dev
        environment:
            - LOBBY_BOY_PORT=${LOBBY_BOY_PORT}
        ports:
            - "${NGINX_PORT}:80"
        depends_on:
            - lobby_boy
            - organaut
#        healthcheck:
#            test: ["CMD", "curl", "-f", "http://localhost"]
#            interval: 30s
#            timeout: 10s
#            retries: 3
#            start_period: 40s
    postgres:
        image: organizator/postgres:dev
        container_name: postgres_organizator_dev
        build:
            context: ./postgres
            dockerfile: Dockerfile.dev
        environment:
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_DB=${POSTGRES_DB}
        volumes:
            - postgres-data:/var/lib/postgresql/data
        ports:
            - "${POSTGRES_PORT}:5432"
        healthcheck:
            test: ["CMD", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
            interval: 20s
            timeout: 5s
            retries: 3



volumes:
  postgres-data:
            